apiVersion: v1
# The Secret will allow us to set secrets in the K8s (kind of config variables)
kind: Secret
metadata:
  name: aftership-secrets
type: Opaque
data:
  NPM_TOKEN: 
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: aftership-config
data:
    # this is only an example, we can add actual code in the ConfigMap
  config: |
        'use strict';
        module.exports = {
           
        };
---
apiVersion: v1
# Service stands for service discovery
kind: Service
metadata:
  name: demo-k8s-service
spec:
# Here we ask k8s, to assign a port for the outside world, with NodePort, later he will give you 1 to access your app.
  type: NodePort
  ports:
    # This port is the internal port open for the Service discovery
  - port: 80
    # This port is the Pond external port (you will see it again when we define the Pods)
    targetPort: 8080
  selector:
    # This is the label of the Pod (will define later)
    app: demo-k8s
---
apiVersion: extensions/v1beta1
# This type is the deployment, you will see in the k8s dashoard
kind: Deployment
metadata:
  # Then name you will see in the dashboard of deployment
  name: demo-k8s
spec:
  # here we define that we will have the Pods replicate
  replicas: 2
  template:
    metadata:
      labels:
        # the label of the Pod (notice is the same of the selector define in the service discovery)
        app: demo-k8s
    spec:
      containers:
        # here we define the cointainers inside the Pods (in this case we only have 1)
      - name: demo-k8s
        image: gcr.io/aftership-hackathon/demo-k8s
        ports:
        # this Container will have this port expose
        - containerPort: 8080
